name: CD

on:
  push:
    branches: [master]
  schedule:
    - cron: '30 4 * * *'
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force container rebuild'
        required: true
        type: choice
        options: [yes, no]

jobs:
  Alpine:
    name: Alpine
    runs-on: ubuntu-latest

    strategy:
      matrix:
        version: [ '3.11', '3.12', '3.13', '3.14', '3.15' ]

    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Check for updates
        id: update_check
        continue-on-error: true
        run : |
          if [[ "${{ github.event.inputs.force_rebuild }}" == "true" ]] ; then
            exit 1
          else
            docker run --rm essentialkaos/alpine:${{ matrix.version }} checkupdate
          fi

      - name: Trigger image rebuild
        if: ${{ steps.update_check.outcome == 'failure' }}
        run: |
          curl -H "Content-Type: application/json" --data '{"docker_tag": "${{ matrix.version }}"}' -X POST ${{ secrets.BUILD_TRIGGER_URL }}

      - name: Check for rebuilt base image
        if: ${{ steps.update_check.outcome != 'failure' }}
        run: |
          echo "Running check…"

          echo "::group::Fetching base image…"
          docker pull alpine:${{ matrix.version }}
          echo "::endgroup::"

          echo "::group::Check layers digests…"

          orig_dig=$(docker inspect "alpine:${{ matrix.version }}" | jq -r '.[0].RootFS.Layers[0]')
          our_dig=$(docker inspect "essentialkaos/alpine:${{ matrix.version }}" | jq -r '.[0].RootFS.Layers[0]')

          echo "Original: ${orig_dig}"
          echo "Our:      ${our_dig}"

          echo "::endgroup::"

          if [[ "$orig_dig" != "$our_dig" ]] ; then
            echo "Base image was updated! Sending request to DockerHub for rebuilding ${{ matrix.version }}"
            curl -H "Content-Type: application/json" --data '{"docker_tag": "${{ matrix.version }}"}' -X POST ${{ secrets.BUILD_TRIGGER_URL }}
          else
            echo "No base image updates"
          fi
